"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),index_1=require("wi-studio/index"),http_1=require("@angular/http"),testing_1=require("@angular/core/testing"),testing_2=require("@angular/http/testing"),timer_1=require("./timer");exports.t1=describe("TimerTriggerService tests",function(){beforeEach(function(){testing_1.TestBed.configureTestingModule({imports:[http_1.HttpModule],providers:[{provide:index_1.WiServiceContribution,useClass:timer_1.TimerTriggerService},{provide:http_1.XHRBackend,useClass:testing_2.MockBackend}]})}),afterEach(function(){testing_1.TestBed.resetTestingModule()}),describe("TimerTriggerService",function(){it("should return timer trigger service",function(){testing_1.inject([core_1.Injector,http_1.Http],function(e,t){var i=new timer_1.TimerTriggerService;expect(null!==i).toBeTruthy("Timer Trigger Service not found")})()})}),describe("getValidationProvider(Time Interval)",function(){it("should return the validation provider for Time Interval",function(){testing_1.inject([core_1.Injector,http_1.Http],function(e,t){var i=new timer_1.TimerTriggerService;describe("IContribValidation(context:false)",function(){var e={endpoint:{settings:[{name:"Repeating",type:"boolean",description:"Indicates this flow should be run only once or multiple times",value:!0,required:!0}]}};it("should return true",function(){var t=i.validate("Time Interval",e);expect(t.isVisible()).toBeFalsy("Incorrect value returned, expected false")})}),describe("IContribValidation(context:true)",function(){var e={endpoint:{settings:[{name:"Repeating",type:"boolean",description:"Indicates this flow should be run only once or multiple times",value:!1,required:!0}]}};it("should return false",function(){var t=i.validate("Time Interval",e);expect(t.isVisible()).toBeFalsy("Incorrect value returned, expected false")})})})()})}),describe("getValidationProvider(Interval Unit)",function(){it("should return a validation provider for Interval Unit",function(){testing_1.inject([core_1.Injector,http_1.Http],function(e,t){var i=new timer_1.TimerTriggerService;describe("IContribValidation(context:false)",function(){var e={endpoint:{settings:[{name:"Repeating",type:"boolean",description:"Indicates this flow should be run only once or multiple times",value:!0,required:!0}]}};it("should return true",function(){var t=i.validate("Interval Unit",e);expect(t.isVisible()).toBeFalsy("Incorrect value returned, expected false")})}),describe("IContribValidation(context:true)",function(){var e={endpoint:{settings:[{name:"Repeating",type:"boolean",description:"Indicates this flow should be run only once or multiple times",value:!1,required:!0}]}};it("should return false",function(){var t=i.validate("Interval Unit",e);expect(t.isVisible()).toBeFalsy("Incorrect value returned, expected false")})})})()})})});